[
  {
    "name":"ch.qos.logback.classic.Logger"
  },
  {
    "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "allPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.DateConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LevelConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.LoggerConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.MessageConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.ThreadConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.ConsoleAppender",
    "allPublicMethods":true,
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.pattern.color.CyanCompositeConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.pattern.color.GrayCompositeConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.fasterxml.jackson.databind.JsonDeserializer[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.JsonSerializer[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.KeyDeserializer[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.Module[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier[]"
  },
  {
    "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
  },
  {
    "name":"com.sun.proxy.$Proxy19",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
  },
  {
    "name":"com.sun.proxy.$Proxy42",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.reflect.InvocationHandler"] }]
  },
  {
    "name":"io.micronaut.aop.Interceptor[]"
  },
  {
    "name":"io.micronaut.buffer.netty.$NettyByteBufferFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$BeanConfiguration",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateMetadataSources1DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateSessionFactory3DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateSessionFactoryBuilder2DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBean$HibernateStandardServiceRegistry0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$EntityManagerFactoryBeanDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$JpaConfiguration$EntityScanConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$JpaConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$TransactionalSession$InterceptedDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.$TransactionalSessionInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.condition.$EntitiesInPackageCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.jcache.$BeanConfiguration",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.jcache.$HibernateJCacheManagerBinderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.metrics.$HibernateMetricsBinderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.hibernate.jpa.validation.$JPATraversableResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.jdbc.tomcat.$BeanConfiguration",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.jdbc.tomcat.$DatasourceConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.jdbc.tomcat.$DatasourceFactory$DataSource0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.jdbc.tomcat.$DatasourceFactory$TomcatPoolDataSourceMetadataProvider1DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.configuration.jdbc.tomcat.$DatasourceFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.context.env.PropertiesPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.context.env.yaml.YamlPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.hibernate.event.$EventIntegratorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.hibernate.naming.$DefaultPhysicalNamingStrategyDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.hibernate.naming.$PhysicalNamingStrategyConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.hibernate.operations.$HibernateJpaOperationsDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.hibernate.runtime.$DataEntityManagerFactoryBean$HibernateStandardServiceRegistry0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.hibernate.runtime.$DataEntityManagerFactoryBeanDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.intercept.$DataIntroductionAdviceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.jpa.repository.intercept.$FlushInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.model.$DefaultPageable$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.model.query.builder.jpa.$JpaQueryBuilder$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.model.query.builder.sql.$SqlQueryBuilder$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.config.$DataConfiguration$PageableConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.config.$DataConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.date.$CurrentDateTimeProviderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.http.$PageableRequestArgumentBinderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DataInitializerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultCountInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultDeleteAllInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultDeleteOneInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultExistsByInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindAllInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindByIdInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindOneInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindOptionalInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindPageInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindSliceInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultFindStreamInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultSaveAllInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultSaveEntityInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultSaveOneInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultUpdateEntityInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.$DefaultUpdateInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultCountAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultDeleteAllAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultDeleteOneAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultExistsByAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindAllAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindByIdAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindOneAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindPageAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultFindSliceAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultSaveAllAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultSaveEntityInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultSaveOneAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultUpdateAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.async.$DefaultUpdateEntityAsyncInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultCountReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteAllReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultDeleteOneReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultExistsByReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindAllReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindByIdReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindOneReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindPageReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultFindSliceReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultSaveAllReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultSaveEntityReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultSaveOneReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateEntityReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.data.runtime.intercept.reactive.$DefaultUpdateReactiveInterceptor$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.$DefaultCompositeDiscoveryClientDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.$DefaultServiceInstanceIdGeneratorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.$AbstractComputeInstanceMetadata$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.aws.$AmazonComputeInstanceMetadataResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.aws.$AmazonEC2InstanceMetadata$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.aws.$AmazonMetadataConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.gcp.$GoogleComputeInstanceMetadata$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.gcp.$GoogleComputeInstanceMetadataResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.gcp.$GoogleComputeMetadataConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.oraclecloud.$OracleCloudInstanceMetadata$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.oraclecloud.$OracleCloudMetadataConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.cloud.oraclecloud.$OracleCloudMetadataResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.discovery.config.$DefaultCompositeConfigurationClientDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.health.$DefaultCurrentHealthStatusDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.health.$HealthStatus$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.health.$HeartbeatConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.health.$HeartbeatTaskDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.HttpMethod[]"
  },
  {
    "name":"io.micronaut.http.bind.$DefaultRequestBinderRegistryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$DefaultHttpClientConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$DefaultLoadBalancerResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.$ServiceHttpClientFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.filter.$DefaultHttpClientFilterResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.interceptor.$HttpClientIntroductionAdviceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.loadbalance.$LoadBalancerConvertersDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.netty.$RxNettyHttpClientRegistry$HttpClient0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.netty.$RxNettyHttpClientRegistryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.netty.ssl.$NettyClientSslBuilderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.client.rxjava2.$RxReactiveClientResultTransformerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.codec.$CodecConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.converters.$HttpConverterRegistrarDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.hateoas.$VndError$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup1DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$EpollEventLoopGroupFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$NettyThreadFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.$NioEventLoopGroupFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.reactive.HandlerPublisher",
    "methods":[
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
    ]
  },
  {
    "name":"io.micronaut.http.netty.stream.HttpStreamsServerHandler",
    "methods":[
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcasterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.netty.websocket.$WebSocketMessageEncoderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.resource.$ResourceLoaderFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.$HttpServerConfiguration$CorsConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.$HttpServerConfiguration$MultipartConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.$HttpServerConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.binding.$RequestArgumentSatisfierDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.codec.$TextStreamCodecDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.context.$ServerRequestContextFilterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.context.$ServerRequestContextInstrumentationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.cors.$BeanConfiguration",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.cors.$CorsFilterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.cors.$CorsOriginConverterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.exceptions.$ContentLengthExceededHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.exceptions.$ConversionErrorHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.exceptions.$HttpStatusHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.exceptions.$JsonExceptionHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.exceptions.$URISyntaxHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.$DefaultHttpCompressionStrategyDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.$FormDataHttpContentSubscriberFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.$NettyEmbeddedServerInstanceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.$NettyHttpServerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.$NettyRequestArgumentSatisfierDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.NettyHttpResponseFactory",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.RoutingInBoundHandler",
    "methods":[
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
    ]
  },
  {
    "name":"io.micronaut.http.server.netty.binders.$NettyBinderRegistrarDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$ParentDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$WorkerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.converters.$DuplicateRouteHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.converters.$NettyConvertersDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.converters.$UnsatisfiedRouteHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.jackson.$JsonViewServerFilterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.types.$DefaultCustomizableResponseTypeHandlerRegistryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$CacheControlConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.util.$DefaultHttpClientAddressResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.util.$DefaultHttpHostResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.server.websocket.$ServerWebSocketProcessorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ClientSslConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$DefaultSslConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.ssl.$ServerSslConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.http.util.$OutgoingHttpRequestProcessorImplDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.$BeanConfiguration",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.$JacksonConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.$ObjectMapperFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.bind.$JacksonBeanPropertyBinderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.codec.$JsonMediaTypeCodecDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.codec.$JsonStreamMediaTypeCodecDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.convert.$JacksonConverterRegistrarDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.env.CloudFoundryVcapApplicationPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.env.CloudFoundryVcapServicesPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.env.EnvJsonPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.env.JsonPropertySourceLoader",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.modules.$BeanIntrospectionModuleDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.serialize.$ConvertibleValuesSerializerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.serialize.$JacksonObjectSerializerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.serialize.$OptionalValuesSerializerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.serialize.$ResourceModuleDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jackson.serialize.$ResourceSerializerModifierDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$DataSourceTransactionManager0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactory$TransactionAwareDataSourceListener1DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jdbc.spring.$DataSourceTransactionManagerFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jdbc.spring.$HibernatePresenceCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.jdbc.spring.$SpringDataSourceResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.logging.$PropertiesLoggingLevelsConfigurerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.logging.impl.$LogbackLoggingSystemDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.reactive.flow.converters.$FlowConverterRegistrarDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.reactive.rxjava2.$RxInstrumenterFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.reactive.rxjava2.$RxJava2InstrumentationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.reactive.rxjava2.converters.$RxJavaConverterRegistrarDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.retry.intercept.$DefaultRetryInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.retry.intercept.$RecoveryInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.$ApplicationConfiguration$InstanceConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.$ApplicationConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.context.$CompositeMessageSourceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.context.env.$ConfigurationIntroductionAdviceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.context.scope.$ThreadLocalCustomScopeDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.context.scope.refresh.$RefreshInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScopeDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.converters.time.$TimeConverterRegistrarDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.http.codec.$TextPlainCodecDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.http.scope.$RequestCustomScopeDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.runtime.server.watch.event.$FileWatchRestartListenerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.$DefaultTaskExceptionHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.$ScheduledExecutorTaskSchedulerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.async.$AsyncInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$DefaultExecutorSelectorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$DefaultThreadFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$ExecutorFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfigDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfigDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.executor.$UserExecutorConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.instrument.$ThreadFactoryInstrumenterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.io.watch.$DefaultWatchThreadDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.io.watch.$FileWatchConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0DefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.hibernate5.$HibernateTransactionManagerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.hibernate5.MicronautSessionContext",
    "methods":[{"name":"<init>","parameterTypes":["org.hibernate.engine.spi.SessionFactoryImplementor"] }]
  },
  {
    "name":"io.micronaut.transaction.interceptor.$TransactionalEventInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.interceptor.$TransactionalInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.jdbc.$DataSourceTransactionManagerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.jdbc.$DelegatingDataSourceResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.jdbc.$TransactionAwareDataSourceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.jdbc.$TransactionalConnection$InterceptedDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.jdbc.$TransactionalConnectionInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.transaction.test.$DefaultTestTransactionInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.$ValidatingInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.exceptions.$ConstraintExceptionHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.exceptions.$ValidationExceptionHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.$DefaultClockProviderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.$DefaultValidatorConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.$DefaultValidatorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.$DefaultValidatorFactoryDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$ValidatorKey$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidatorsDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.constraints.$EmailValidatorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.constraints.$PatternValidatorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractorsDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.messages.$DefaultValidationMessagesDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.validation.validator.resolver.$CompositeTraversableResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.$AnnotatedFilterRouteBuilderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.$AnnotatedMethodRouteBuilderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.$DefaultRouterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.naming.$ConfigurableUriNamingStrategyDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.naming.$HyphenatedUriNamingStrategyDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.resource.$StaticResourceConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.resource.$StaticResourceResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.$ConfigurationDefaultVersionProviderDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.$RouteVersionFilterDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.$RoutesVersioningConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.$VersionAwareRouterListenerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfigurationDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.micronaut.websocket.interceptor.$ClientWebSocketInterceptorDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
    "methods":[
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
    ]
  },
  {
    "name":"io.netty.buffer.AbstractByteBufAllocator",
    "allDeclaredMethods":true
  },
  {
    "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
    "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.channel.ChannelDuplexHandler",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.channel.ChannelHandlerAdapter",
    "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
  },
  {
    "name":"io.netty.channel.ChannelInboundHandlerAdapter",
    "methods":[
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
    ]
  },
  {
    "name":"io.netty.channel.ChannelInitializer",
    "methods":[
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
    ]
  },
  {
    "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
    ]
  },
  {
    "name":"io.netty.channel.CombinedChannelDuplexHandler",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
    "methods":[
      {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
      {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
    "methods":[
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
      {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
    ]
  },
  {
    "name":"io.netty.channel.SimpleChannelInboundHandler",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"io.netty.handler.codec.MessageToMessageCodec",
    "methods":[
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.handler.codec.MessageToMessageDecoder",
    "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
  },
  {
    "name":"io.netty.handler.codec.MessageToMessageEncoder",
    "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpContentDecoder",
    "methods":[
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
    ]
  },
  {
    "name":"io.netty.handler.codec.http.HttpContentEncoder",
    "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
  },
  {
    "name":"io.netty.handler.codec.http.HttpServerKeepAliveHandler",
    "methods":[
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.handler.flow.FlowControlHandler",
    "methods":[
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
    ]
  },
  {
    "name":"io.netty.handler.stream.ChunkedWriteHandler",
    "methods":[
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.handler.timeout.IdleStateHandler",
    "methods":[
      {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
      {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
      {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
    ]
  },
  {
    "name":"io.netty.util.ReferenceCountUtil",
    "allDeclaredMethods":true
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
    "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
    "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
    "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
    "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
    "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
    "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
  },
  {
    "name":"io.reactivex.Completable"
  },
  {
    "name":"io.reactivex.Maybe"
  },
  {
    "name":"io.reactivex.Observable"
  },
  {
    "name":"io.reactivex.Single"
  },
  {
    "name":"java.io.File",
    "methods":[{"name":"toPath","parameterTypes":[] }]
  },
  {
    "name":"java.io.Serializable",
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.Class",
    "methods":[
      {"name":"getAnnotatedInterfaces","parameterTypes":[] }, 
      {"name":"getAnnotatedSuperclass","parameterTypes":[] }, 
      {"name":"getDeclaredMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, 
      {"name":"getMethod","parameterTypes":["java.lang.String","java.lang.Class[]"] }, 
      {"name":"getNestHost","parameterTypes":[] }, 
      {"name":"getNestMembers","parameterTypes":[] }, 
      {"name":"isNestmateOf","parameterTypes":["java.lang.Class"] }
    ]
  },
  {
    "name":"java.lang.Comparable",
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Long",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"java.lang.Number",
    "allDeclaredFields":true,
    "allDeclaredMethods":true
  },
  {
    "name":"java.lang.Object",
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"equals","parameterTypes":["java.lang.Object"] }, 
      {"name":"hashCode","parameterTypes":[] }
    ]
  },
  {
    "name":"java.lang.Runtime",
    "methods":[{"name":"version","parameterTypes":[] }]
  },
  {
    "name":"java.lang.Runtime$Version",
    "methods":[{"name":"major","parameterTypes":[] }]
  },
  {
    "name":"java.lang.invoke.MethodHandles",
    "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
  },
  {
    "name":"java.lang.invoke.MethodHandles$Lookup",
    "methods":[
      {"name":"defineClass","parameterTypes":["byte[]"] }, 
      {"name":"lookupClass","parameterTypes":[] }, 
      {"name":"lookupModes","parameterTypes":[] }
    ]
  },
  {
    "name":"java.lang.management.ManagementFactory",
    "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
  },
  {
    "name":"java.lang.management.RuntimeMXBean",
    "methods":[
      {"name":"getInputArguments","parameterTypes":[] }, 
      {"name":"getName","parameterTypes":[] }
    ]
  },
  {
    "name":"java.lang.reflect.AnnotatedArrayType",
    "methods":[{"name":"getAnnotatedGenericComponentType","parameterTypes":[] }]
  },
  {
    "name":"java.lang.reflect.AnnotatedParameterizedType",
    "methods":[{"name":"getAnnotatedActualTypeArguments","parameterTypes":[] }]
  },
  {
    "name":"java.lang.reflect.AnnotatedType",
    "methods":[{"name":"getType","parameterTypes":[] }]
  },
  {
    "name":"java.lang.reflect.Executable",
    "methods":[
      {"name":"getAnnotatedExceptionTypes","parameterTypes":[] }, 
      {"name":"getAnnotatedParameterTypes","parameterTypes":[] }, 
      {"name":"getAnnotatedReceiverType","parameterTypes":[] }, 
      {"name":"getParameterCount","parameterTypes":[] }, 
      {"name":"getParameters","parameterTypes":[] }
    ]
  },
  {
    "name":"java.lang.reflect.Field",
    "methods":[{"name":"getAnnotatedType","parameterTypes":[] }]
  },
  {
    "name":"java.lang.reflect.Method",
    "methods":[{"name":"getAnnotatedReturnType","parameterTypes":[] }]
  },
  {
    "name":"java.lang.reflect.Parameter",
    "methods":[
      {"name":"getModifiers","parameterTypes":[] }, 
      {"name":"getName","parameterTypes":[] }, 
      {"name":"isNamePresent","parameterTypes":[] }
    ]
  },
  {
    "name":"java.nio.Bits",
    "fields":[{"name":"UNALIGNED"}]
  },
  {
    "name":"java.nio.Buffer",
    "fields":[{"name":"address", "allowUnsafeAccess":true}]
  },
  {
    "name":"java.nio.DirectByteBuffer",
    "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
  },
  {
    "name":"java.nio.file.CopyOption"
  },
  {
    "name":"java.nio.file.CopyOption[]"
  },
  {
    "name":"java.nio.file.Files",
    "methods":[{"name":"move","parameterTypes":["java.nio.file.Path","java.nio.file.Path","java.nio.file.CopyOption[]"] }]
  },
  {
    "name":"java.nio.file.Path"
  },
  {
    "name":"java.nio.file.StandardCopyOption"
  },
  {
    "name":"java.sql.Date"
  },
  {
    "name":"java.sql.Timestamp"
  },
  {
    "name":"java.util.ServiceLoader",
    "methods":[{"name":"stream","parameterTypes":[] }]
  },
  {
    "name":"java.util.ServiceLoader$Provider",
    "methods":[{"name":"type","parameterTypes":[] }]
  },
  {
    "name":"java.util.logging.SimpleFormatter",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"javax.management.ObjectName"
  },
  {
    "name":"javax.validation.Validation"
  },
  {
    "name":"jdk.internal.misc.Unsafe",
    "methods":[{"name":"getUnsafe","parameterTypes":[] }]
  },
  {
    "name":"org.acme.ingredient.$Ingredient$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.ingredient.$IngredientControllerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.ingredient.$IngredientNotFoundMapperDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.ingredient.$IngredientRepository$InterceptedDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.ingredient.$IngredientServiceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.ingredient.Ingredient",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"getId","parameterTypes":[] }, 
      {"name":"setId","parameterTypes":["java.lang.Long"] }
    ]
  },
  {
    "name":"org.acme.product.$Product$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.product.$ProductControllerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.product.$ProductNotFoundMapperDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.product.$ProductRepository$InterceptedDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.product.$ProductServiceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.product.Product",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"getId","parameterTypes":[] }, 
      {"name":"setId","parameterTypes":["java.lang.Long"] }
    ]
  },
  {
    "name":"org.acme.store.$Store$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.store.$StoreControllerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.store.$StoreNotFoundHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.store.$StoreRepository$InterceptedDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.store.$StoreServiceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.store.Store",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"getId","parameterTypes":[] }, 
      {"name":"setId","parameterTypes":["java.lang.Long"] }
    ]
  },
  {
    "name":"org.acme.supplier.$Supplier$IntrospectionRef",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.supplier.$SupplierControllerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.supplier.$SupplierNotFoundHandlerDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.supplier.$SupplierRepository$InterceptedDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.supplier.$SupplierServiceDefinitionClass",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.acme.supplier.Supplier",
    "allDeclaredFields":true,
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true,
    "methods":[
      {"name":"getId","parameterTypes":[] }, 
      {"name":"setId","parameterTypes":["java.lang.Long"] }
    ]
  },
  {
    "name":"org.hibernate.annotations.common.util.impl.Log_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.hibernate.boot.cfgxml.internal.CfgXmlAccessServiceImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.bytecode.internal.bytebuddy.ProxyFactoryFactoryImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.cache.internal.DisabledCaching",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.cache.internal.NoCachingRegionFactory",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.cfg.beanvalidation.TypeSafeActivator",
    "methods":[{"name":"activate","parameterTypes":["org.hibernate.cfg.beanvalidation.ActivationContext"] }]
  },
  {
    "name":"org.hibernate.dialect.PostgreSQL10Dialect",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.engine.config.internal.ConfigurationServiceImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.jdbc.dialect.internal.DialectResolverSet",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.jdbc.internal.JdbcServicesImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.jndi.internal.JndiServiceImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.engine.query.internal.NativeQueryInterpreterStandardImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.event.service.internal.EventListenerRegistryImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.event.spi.AutoFlushEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.DeleteEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.DirtyCheckEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.EventType",
    "allDeclaredFields":true
  },
  {
    "name":"org.hibernate.event.spi.EvictEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.FlushEntityEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.FlushEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.InitializeCollectionEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.LoadEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.LockEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.MergeEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PersistEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PostDeleteEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PostInsertEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PostLoadEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PostUpdateEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PreDeleteEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PreInsertEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PreLoadEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.PreUpdateEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.RefreshEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.ReplicateEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.ResolveNaturalIdEventListener[]"
  },
  {
    "name":"org.hibernate.event.spi.SaveOrUpdateEventListener[]"
  },
  {
    "name":"org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.hql.internal.ast.HqlToken",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.DotNode",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.FromClause",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.FromElement",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.IdentNode",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.Node",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.QueryNode",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.SelectClause",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.SqlFragment",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.hql.internal.ast.tree.SqlNode",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.id.enhanced.NoopOptimizer",
    "methods":[{"name":"<init>","parameterTypes":["java.lang.Class","int"] }]
  },
  {
    "name":"org.hibernate.id.enhanced.SequenceStyleGenerator",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.internal.CoreMessageLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.hibernate.internal.EntityManagerMessageLogger_$logger",
    "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
  },
  {
    "name":"org.hibernate.jmx.internal.DisabledJmxServiceImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.persister.collection.BasicCollectionPersister",
    "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.Collection","org.hibernate.cache.spi.access.CollectionDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
  },
  {
    "name":"org.hibernate.persister.entity.SingleTableEntityPersister",
    "methods":[{"name":"<init>","parameterTypes":["org.hibernate.mapping.PersistentClass","org.hibernate.cache.spi.access.EntityDataAccess","org.hibernate.cache.spi.access.NaturalIdDataAccess","org.hibernate.persister.spi.PersisterCreationContext"] }]
  },
  {
    "name":"org.hibernate.persister.internal.PersisterFactoryImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.persister.internal.StandardPersisterClassResolver",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.property.access.internal.PropertyAccessStrategyResolverStandardImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.proxy.HibernateProxy",
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.hibernate.proxy.ProxyConfiguration",
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher",
    "allDeclaredMethods":true,
    "allDeclaredConstructors":true
  },
  {
    "name":"org.hibernate.resource.beans.internal.ManagedBeanRegistryImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.service.internal.SessionFactoryServiceRegistryFactoryImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.stat.internal.StatisticsImpl",
    "allPublicMethods":true
  },
  {
    "name":"org.hibernate.tuple.entity.PojoEntityTuplizer",
    "methods":[{"name":"<init>","parameterTypes":["org.hibernate.tuple.entity.EntityMetamodel","org.hibernate.mapping.PersistentClass"] }]
  },
  {
    "name":"org.postgresql.Driver",
    "methods":[{"name":"<init>","parameterTypes":[] }]
  },
  {
    "name":"org.postgresql.PGProperty",
    "fields":[
      {"name":"ALLOW_ENCODING_CHANGES"}, 
      {"name":"APPLICATION_NAME"}, 
      {"name":"ASSUME_MIN_SERVER_VERSION"}, 
      {"name":"AUTOSAVE"}, 
      {"name":"BINARY_TRANSFER"}, 
      {"name":"BINARY_TRANSFER_DISABLE"}, 
      {"name":"BINARY_TRANSFER_ENABLE"}, 
      {"name":"CANCEL_SIGNAL_TIMEOUT"}, 
      {"name":"CLEANUP_SAVEPOINTS"}, 
      {"name":"CONNECT_TIMEOUT"}, 
      {"name":"CURRENT_SCHEMA"}, 
      {"name":"DATABASE_METADATA_CACHE_FIELDS"}, 
      {"name":"DATABASE_METADATA_CACHE_FIELDS_MIB"}, 
      {"name":"DEFAULT_ROW_FETCH_SIZE"}, 
      {"name":"DISABLE_COLUMN_SANITISER"}, 
      {"name":"ESCAPE_SYNTAX_CALL_MODE"}, 
      {"name":"GSS_LIB"}, 
      {"name":"HIDE_UNPRIVILEGED_OBJECTS"}, 
      {"name":"HOST_RECHECK_SECONDS"}, 
      {"name":"JAAS_APPLICATION_NAME"}, 
      {"name":"JAAS_LOGIN"}, 
      {"name":"KERBEROS_SERVER_NAME"}, 
      {"name":"LOAD_BALANCE_HOSTS"}, 
      {"name":"LOGGER_FILE"}, 
      {"name":"LOGGER_LEVEL"}, 
      {"name":"LOGIN_TIMEOUT"}, 
      {"name":"LOG_SERVER_ERROR_DETAIL"}, 
      {"name":"LOG_UNCLOSED_CONNECTIONS"}, 
      {"name":"MAX_RESULT_BUFFER"}, 
      {"name":"OPTIONS"}, 
      {"name":"PASSWORD"}, 
      {"name":"PG_DBNAME"}, 
      {"name":"PG_HOST"}, 
      {"name":"PG_PORT"}, 
      {"name":"PREFER_QUERY_MODE"}, 
      {"name":"PREPARED_STATEMENT_CACHE_QUERIES"}, 
      {"name":"PREPARED_STATEMENT_CACHE_SIZE_MIB"}, 
      {"name":"PREPARE_THRESHOLD"}, 
      {"name":"PROTOCOL_VERSION"}, 
      {"name":"READ_ONLY"}, 
      {"name":"READ_ONLY_MODE"}, 
      {"name":"RECEIVE_BUFFER_SIZE"}, 
      {"name":"REPLICATION"}, 
      {"name":"REWRITE_BATCHED_INSERTS"}, 
      {"name":"SEND_BUFFER_SIZE"}, 
      {"name":"SOCKET_FACTORY"}, 
      {"name":"SOCKET_FACTORY_ARG"}, 
      {"name":"SOCKET_TIMEOUT"}, 
      {"name":"SSL"}, 
      {"name":"SSL_CERT"}, 
      {"name":"SSL_FACTORY"}, 
      {"name":"SSL_FACTORY_ARG"}, 
      {"name":"SSL_HOSTNAME_VERIFIER"}, 
      {"name":"SSL_KEY"}, 
      {"name":"SSL_MODE"}, 
      {"name":"SSL_PASSWORD"}, 
      {"name":"SSL_PASSWORD_CALLBACK"}, 
      {"name":"SSL_ROOT_CERT"}, 
      {"name":"SSPI_SERVICE_CLASS"}, 
      {"name":"STRING_TYPE"}, 
      {"name":"TARGET_SERVER_TYPE"}, 
      {"name":"TCP_KEEP_ALIVE"}, 
      {"name":"UNKNOWN_LENGTH"}, 
      {"name":"USER"}, 
      {"name":"USE_SPNEGO"}
    ]
  },
  {
    "name":"org.postgresql.jdbc.PgConnection",
    "methods":[{"name":"getSchema","parameterTypes":[] }]
  },
  {
    "name":"org.postgresql.jdbc.PgDatabaseMetaData",
    "methods":[{"name":"supportsRefCursors","parameterTypes":[] }]
  },
  {
    "name":"org.slf4j.spi.LocationAwareLogger",
    "allDeclaredMethods":true
  },
  {
    "name":"sun.misc.Unsafe",
    "fields":[{"name":"theUnsafe"}],
    "methods":[
      {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
      {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
      {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
      {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
    ]
  },
  {
    "name":"sun.nio.ch.SelectorImpl",
    "fields":[
      {"name":"publicSelectedKeys", "allowUnsafeAccess":true}, 
      {"name":"selectedKeys", "allowUnsafeAccess":true}
    ]
  }
  ]